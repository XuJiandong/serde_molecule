use crate::compare_slice;
use crate::new::test1::Struct1;
use crate::new::test1::Table1 as NewTable1;
use crate::new::test1_default as new_default;
use crate::old::test1::Struct1Opt;
use crate::old::test1::Table1 as OldTable1;
use crate::old::test1_default as old_default;
use molecule::prelude::*;
use serde_molecule::{from_slice, to_vec};

#[test]
fn test_ser_struct1() {
    let old_value = old_default::DEFAULT_STRUCT1.clone();
    let new_value = new_default::DEFAULT_STRUCT1.clone();
    let old = old_value.as_slice();
    let new = to_vec(&new_value, true).unwrap();
    assert_eq!(old, &new);
}

#[test]
fn test_de_struct1() {
    let new_value = new_default::DEFAULT_STRUCT1.clone();
    let new_vec = to_vec(&new_value, false).unwrap();
    let new_value2: Struct1 = from_slice(&new_vec, false).unwrap();
    assert_eq!(new_value, new_value2);

    let mut wrong_vec = new_vec.clone();
    let l = wrong_vec.len();
    wrong_vec[l - 1] ^= 1;
    let new_value2: Struct1 = from_slice(&wrong_vec, false).unwrap();
    assert_ne!(new_value, new_value2);
}

#[test]
fn test_table1() {
    let old_value = OldTable1::new_builder()
        .f1(old_default::DEFAULT_BYTE.clone())
        .f2(old_default::DEFAULT_U16.clone())
        .f3(old_default::DEFAULT_U32.clone())
        .f4(old_default::DEFAULT_U64.clone())
        .f5(old_default::DEFAULT_U128.clone())
        .fixvec(old_default::DEFAULT_FIXVEC.clone())
        .dynvec(old_default::DEFAULT_DYNVEC.clone())
        .struct1(old_default::DEFAULT_STRUCT1.clone())
        .option(Default::default())
        .array3(old_default::DEFAULT_ARRAY3.clone())
        .string(old_default::DEFAULT_STRING.clone())
        .struct1_opt(Struct1Opt::from_slice(old_default::DEFAULT_STRUCT1.as_slice()).unwrap())
        .map(old_default::DEFAULT_MAP.clone())
        .build();
    let new_value = NewTable1 {
        f1: new_default::DEFAULT_BYTE,
        f2: new_default::DEFAULT_U16,
        f3: new_default::DEFAULT_U32,
        f4: new_default::DEFAULT_U64,
        f5: new_default::DEFAULT_U128,
        fixvec: new_default::DEFAULT_FIXVEC.clone(),
        dynvec: new_default::DEFAULT_DYNVEC.clone(),
        struct1: new_default::DEFAULT_STRUCT1.clone(),
        option: None,
        array3: new_default::DEFAULT_ARRAY3.clone(),
        string: new_default::DEFAULT_STRING.clone(),
        struct1_opt: Some(new_default::DEFAULT_STRUCT1.clone()),
        map: new_default::DEFAULT_MAP.clone(),
    };
    let old = old_value.as_slice();
    let new = to_vec(&new_value, false).unwrap();
    assert_eq!(old, new.as_slice());
}

#[test]
fn test_enum() {
    use crate::new::test1::Enum1 as NewEnum1;
    use crate::old::test1::Enum1 as OldEnum1;
    use crate::old::test1::Enum1Union;

    let old_value: OldEnum1 = OldEnum1::new_builder()
        .set(Enum1Union::U16(old_default::DEFAULT_U16.clone()))
        .build();
    let new_value: NewEnum1 = NewEnum1::U16(new_default::DEFAULT_U16);
    let old = old_value.as_slice();
    let new = to_vec(&new_value, false).unwrap();
    assert_eq!(old, new.as_slice());
}

// from: https://explorer.nervos.org/block/0xcc98a87e540b6a34bed8dc5e41721b120e303b68e424d6f1c84f99310321dd02
#[test]
fn test_block_v1() {
    let bytes: [u8; 2807] = [
        0xf7, 0x0a, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00,
        0x00, 0xcf, 0x0a, 0x00, 0x00, 0xd3, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0xfc,
        0x04, 0x19, 0xcf, 0x29, 0x2b, 0x7d, 0x91, 0x01, 0x00, 0x00, 0x0e, 0x22, 0xd3, 0x00, 0x00,
        0x00, 0x00, 0x00, 0xb6, 0x28, 0x00, 0xc0, 0x02, 0xce, 0x05, 0x00, 0x04, 0x89, 0xad, 0x23,
        0xb1, 0xf7, 0x8d, 0xff, 0x30, 0x9e, 0x96, 0x81, 0xfb, 0xfb, 0x28, 0x72, 0x12, 0xad, 0xa4,
        0x99, 0xc5, 0xac, 0xc6, 0x69, 0x92, 0xce, 0xc5, 0xc3, 0xb3, 0x52, 0xaf, 0x54, 0x35, 0xd7,
        0x05, 0x03, 0xf3, 0xd2, 0x15, 0x85, 0x86, 0x91, 0x95, 0xfb, 0xf1, 0xcd, 0xdd, 0x71, 0x6a,
        0x93, 0x39, 0x73, 0x3b, 0x8d, 0x95, 0x18, 0xff, 0xc6, 0x74, 0x06, 0x5a, 0x97, 0x94, 0x33,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0xb7, 0x9a, 0x91, 0xf0, 0xba, 0xd8, 0xdb, 0xf3, 0x88, 0x29, 0x46, 0xa9, 0xa0,
        0x40, 0x33, 0xe1, 0x67, 0xba, 0xc1, 0x62, 0x37, 0x77, 0xfc, 0xe7, 0xf2, 0xf6, 0x81, 0x82,
        0xd3, 0xf8, 0x1d, 0x0b, 0xeb, 0x32, 0x52, 0x32, 0x05, 0x71, 0x08, 0x51, 0x70, 0xda, 0xde,
        0x9c, 0x6f, 0xe5, 0x28, 0x00, 0x14, 0x4d, 0x3d, 0x71, 0x9a, 0xf4, 0x10, 0x07, 0x00, 0x85,
        0x12, 0x27, 0x88, 0x61, 0x32, 0x07, 0x06, 0x01, 0x24, 0x62, 0x04, 0x00, 0x00, 0x00, 0x67,
        0x90, 0x12, 0x30, 0x98, 0x3c, 0xaa, 0x47, 0x04, 0x00, 0x00, 0x00, 0xe3, 0x09, 0x00, 0x00,
        0x14, 0x00, 0x00, 0x00, 0x7e, 0x01, 0x00, 0x00, 0x01, 0x05, 0x00, 0x00, 0x84, 0x08, 0x00,
        0x00, 0x6a, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0xcd, 0x00,
        0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x28,
        0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x22, 0xd3,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x69, 0x00, 0x00, 0x00,
        0x08, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
        0x00, 0x61, 0x00, 0x00, 0x00, 0x81, 0x92, 0xdd, 0xe0, 0x0f, 0x00, 0x00, 0x00, 0x49, 0x00,
        0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x9b,
        0xd7, 0xe0, 0x6f, 0x3e, 0xcf, 0x4b, 0xe0, 0xf2, 0xfc, 0xd2, 0x18, 0x8b, 0x23, 0xf1, 0xb9,
        0xfc, 0xc8, 0x8e, 0x5d, 0x4b, 0x65, 0xa8, 0x63, 0x7b, 0x17, 0x72, 0x3b, 0xbd, 0xa3, 0xcc,
        0xe8, 0x01, 0x14, 0x00, 0x00, 0x00, 0x4a, 0x33, 0x64, 0x70, 0x56, 0x4d, 0x07, 0xca, 0x70,
        0x59, 0xb7, 0x98, 0x04, 0x81, 0xc2, 0xd5, 0x98, 0x09, 0xd6, 0x37, 0x0c, 0x00, 0x00, 0x00,
        0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
        0x00, 0x85, 0x00, 0x00, 0x00, 0x85, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x55, 0x00,
        0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x31,
        0x00, 0x00, 0x00, 0x9b, 0xd7, 0xe0, 0x6f, 0x3e, 0xcf, 0x4b, 0xe0, 0xf2, 0xfc, 0xd2, 0x18,
        0x8b, 0x23, 0xf1, 0xb9, 0xfc, 0xc8, 0x8e, 0x5d, 0x4b, 0x65, 0xa8, 0x63, 0x7b, 0x17, 0x72,
        0x3b, 0xbd, 0xa3, 0xcc, 0xe8, 0x01, 0x14, 0x00, 0x00, 0x00, 0xeb, 0x0c, 0x00, 0x07, 0x9f,
        0x76, 0xe9, 0x0b, 0x97, 0x0d, 0x23, 0x6b, 0xbf, 0x84, 0x5d, 0x9a, 0x50, 0x1d, 0xe7, 0xd6,
        0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x30, 0x2e, 0x31, 0x31, 0x36, 0x2e,
        0x31, 0x20, 0x28, 0x33, 0x33, 0x62, 0x63, 0x32, 0x32, 0x66, 0x2d, 0x64, 0x69, 0x72, 0x74,
        0x79, 0x20, 0x32, 0x30, 0x32, 0x34, 0x2d, 0x30, 0x36, 0x2d, 0x30, 0x33, 0x29, 0x20, 0x00,
        0x00, 0x00, 0x00, 0x83, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xf2, 0x02, 0x00, 0x00,
        0xe6, 0x02, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x93, 0x00, 0x00,
        0x00, 0x97, 0x00, 0x00, 0x00, 0x1f, 0x01, 0x00, 0x00, 0xbe, 0x02, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xe9, 0x11, 0x6d, 0x65, 0x1c, 0x37, 0x16, 0x62, 0xb6,
        0xe2, 0x9e, 0x21, 0x02, 0x42, 0x2e, 0x23, 0xf9, 0x06, 0x56, 0xb8, 0x61, 0x9d, 0xf8, 0x2c,
        0x48, 0xb7, 0x82, 0xff, 0x4d, 0xb4, 0x3a, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xe1,
        0x1c, 0x50, 0x33, 0xf7, 0x49, 0x46, 0x67, 0xf2, 0x3a, 0xe8, 0x75, 0x97, 0x62, 0xf1, 0x96,
        0x10, 0x5e, 0xb3, 0x24, 0x0d, 0x26, 0xa6, 0x5f, 0x80, 0x58, 0x31, 0xb4, 0xb2, 0x6a, 0x16,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0xa7, 0xba, 0x8f, 0xc9, 0x63, 0x49, 0xfe, 0xa0, 0xed,
        0x3a, 0x5c, 0x47, 0x99, 0x2e, 0x3b, 0x40, 0x84, 0xb0, 0x31, 0xa4, 0x22, 0x64, 0xa0, 0x18,
        0xe0, 0x07, 0x2e, 0x81, 0x72, 0xe4, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc7, 0x45,
        0x7b, 0x99, 0x9b, 0xdf, 0x16, 0xf3, 0x1f, 0x43, 0x0b, 0x3e, 0xba, 0xa2, 0xd4, 0xc5, 0xd6,
        0x96, 0xb9, 0x38, 0x1e, 0x8c, 0x01, 0x4e, 0xcc, 0x47, 0x58, 0x82, 0xfd, 0x73, 0xc9, 0xb9,
        0x00, 0x00, 0x00, 0x00, 0x0a, 0x22, 0xd3, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xdb, 0x42,
        0x3f, 0xda, 0x10, 0x78, 0xd5, 0xde, 0x7d, 0x45, 0xda, 0xe1, 0x0c, 0x34, 0x22, 0x6d, 0xaf,
        0xc9, 0x19, 0x8d, 0xac, 0xb9, 0xd5, 0x63, 0xdd, 0xf3, 0x9d, 0x42, 0xe8, 0xf7, 0x75, 0x01,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x9f, 0x9d, 0x14,
        0x45, 0xe4, 0x8f, 0xde, 0x9a, 0x6e, 0x16, 0xd6, 0x0e, 0x3d, 0x2e, 0x39, 0x5f, 0x57, 0x11,
        0xc3, 0xfa, 0x17, 0x6e, 0xe2, 0x68, 0x81, 0x37, 0x98, 0x91, 0x21, 0x81, 0x14, 0x02, 0x00,
        0x00, 0x00, 0x9f, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0x3e,
        0x01, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
        0x61, 0x00, 0x00, 0x00, 0x00, 0x90, 0x2f, 0x50, 0x09, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00,
        0x00, 0x10, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x9b, 0xd7,
        0xe0, 0x6f, 0x3e, 0xcf, 0x4b, 0xe0, 0xf2, 0xfc, 0xd2, 0x18, 0x8b, 0x23, 0xf1, 0xb9, 0xfc,
        0xc8, 0x8e, 0x5d, 0x4b, 0x65, 0xa8, 0x63, 0x7b, 0x17, 0x72, 0x3b, 0xbd, 0xa3, 0xcc, 0xe8,
        0x01, 0x14, 0x00, 0x00, 0x00, 0xfe, 0xd5, 0x59, 0xf2, 0xf9, 0x3e, 0x5e, 0x79, 0x58, 0xd8,
        0xa6, 0x2b, 0x0b, 0x14, 0x8c, 0xb1, 0x8b, 0xc4, 0x84, 0xbf, 0x36, 0x00, 0x00, 0x00, 0x10,
        0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x3a, 0x46, 0x8d, 0x53,
        0x35, 0x2e, 0xb8, 0x55, 0x52, 0x1d, 0xab, 0xed, 0x0d, 0xc7, 0x03, 0x69, 0x29, 0xbf, 0xe7,
        0x27, 0x66, 0xad, 0x58, 0xf8, 0x01, 0xed, 0xfb, 0xae, 0x56, 0x4f, 0x7b, 0x43, 0x01, 0x01,
        0x00, 0x00, 0x00, 0x02, 0x97, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
        0x00, 0x61, 0x00, 0x00, 0x00, 0x00, 0x90, 0x2f, 0x50, 0x09, 0x00, 0x00, 0x00, 0x49, 0x00,
        0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x9b,
        0xd7, 0xe0, 0x6f, 0x3e, 0xcf, 0x4b, 0xe0, 0xf2, 0xfc, 0xd2, 0x18, 0x8b, 0x23, 0xf1, 0xb9,
        0xfc, 0xc8, 0x8e, 0x5d, 0x4b, 0x65, 0xa8, 0x63, 0x7b, 0x17, 0x72, 0x3b, 0xbd, 0xa3, 0xcc,
        0xe8, 0x01, 0x14, 0x00, 0x00, 0x00, 0xfe, 0xd5, 0x59, 0xf2, 0xf9, 0x3e, 0x5e, 0x79, 0x58,
        0xd8, 0xa6, 0x2b, 0x0b, 0x14, 0x8c, 0xb1, 0x8b, 0xc4, 0x84, 0xbf, 0x36, 0x00, 0x00, 0x00,
        0x10, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x9e, 0x53, 0x7b,
        0xf5, 0xb8, 0xec, 0x04, 0x4c, 0xa3, 0xf5, 0x33, 0x55, 0xe8, 0x79, 0xf3, 0xfd, 0x88, 0x32,
        0x21, 0x7e, 0x4a, 0x9b, 0x41, 0xd9, 0x99, 0x4c, 0xf0, 0xc5, 0x47, 0x24, 0x1a, 0x79, 0x01,
        0x01, 0x00, 0x00, 0x00, 0x02, 0x61, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x18, 0x00,
        0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x30, 0x77, 0xde, 0xbf, 0x41, 0x00, 0x00, 0x00, 0x49,
        0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00,
        0x9b, 0xd7, 0xe0, 0x6f, 0x3e, 0xcf, 0x4b, 0xe0, 0xf2, 0xfc, 0xd2, 0x18, 0x8b, 0x23, 0xf1,
        0xb9, 0xfc, 0xc8, 0x8e, 0x5d, 0x4b, 0x65, 0xa8, 0x63, 0x7b, 0x17, 0x72, 0x3b, 0xbd, 0xa3,
        0xcc, 0xe8, 0x01, 0x14, 0x00, 0x00, 0x00, 0xfe, 0xd5, 0x59, 0xf2, 0xf9, 0x3e, 0x5e, 0x79,
        0x58, 0xd8, 0xa6, 0x2b, 0x0b, 0x14, 0x8c, 0xb1, 0x8b, 0xc4, 0x84, 0xbf, 0x28, 0x00, 0x00,
        0x00, 0x10, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x02, 0x00,
        0x00, 0x00, 0x05, 0x0c, 0x0a, 0x00, 0x00, 0x00, 0x05, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
        0xd3, 0x22, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
        0x69, 0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00,
        0x00, 0x10, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x41, 0x00,
        0x00, 0x00, 0x22, 0x5d, 0x52, 0x34, 0xdc, 0x97, 0xa6, 0x7e, 0xbd, 0xca, 0xf1, 0x3f, 0x61,
        0x4b, 0xe2, 0x5a, 0xd3, 0x3f, 0x05, 0xe8, 0x45, 0xc5, 0x03, 0xfd, 0xd1, 0xc4, 0xc4, 0xaf,
        0xf7, 0x8d, 0x38, 0x97, 0x67, 0x6b, 0x3b, 0x49, 0x00, 0xdf, 0x4b, 0x7d, 0xa2, 0xce, 0x57,
        0xe0, 0xeb, 0x78, 0xf0, 0xff, 0xad, 0xac, 0x68, 0xda, 0x9b, 0xf9, 0x3e, 0x16, 0x40, 0x3c,
        0xb7, 0x8a, 0xaa, 0x9d, 0xb4, 0xed, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
        0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
        0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00,
        0x00, 0x00, 0x83, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xf2, 0x02, 0x00, 0x00, 0xe6,
        0x02, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00,
        0x97, 0x00, 0x00, 0x00, 0x1f, 0x01, 0x00, 0x00, 0xbe, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x03, 0x00, 0x00, 0x00, 0xe9, 0x11, 0x6d, 0x65, 0x1c, 0x37, 0x16, 0x62, 0xb6, 0xe2,
        0x9e, 0x21, 0x02, 0x42, 0x2e, 0x23, 0xf9, 0x06, 0x56, 0xb8, 0x61, 0x9d, 0xf8, 0x2c, 0x48,
        0xb7, 0x82, 0xff, 0x4d, 0xb4, 0x3a, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xe1, 0x1c,
        0x50, 0x33, 0xf7, 0x49, 0x46, 0x67, 0xf2, 0x3a, 0xe8, 0x75, 0x97, 0x62, 0xf1, 0x96, 0x10,
        0x5e, 0xb3, 0x24, 0x0d, 0x26, 0xa6, 0x5f, 0x80, 0x58, 0x31, 0xb4, 0xb2, 0x6a, 0x16, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x71, 0xa7, 0xba, 0x8f, 0xc9, 0x63, 0x49, 0xfe, 0xa0, 0xed, 0x3a,
        0x5c, 0x47, 0x99, 0x2e, 0x3b, 0x40, 0x84, 0xb0, 0x31, 0xa4, 0x22, 0x64, 0xa0, 0x18, 0xe0,
        0x07, 0x2e, 0x81, 0x72, 0xe4, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
        0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x79, 0xd8,
        0x8f, 0x49, 0x4b, 0x75, 0x7a, 0xd0, 0x95, 0xf6, 0xc9, 0x1d, 0x55, 0xab, 0x2d, 0xbf, 0x82,
        0xff, 0x71, 0x83, 0x2d, 0x7b, 0x7a, 0x69, 0x30, 0xd7, 0xa4, 0xe2, 0x7d, 0xbf, 0xad, 0x00,
        0x00, 0x00, 0x00, 0xbb, 0xf9, 0xc7, 0x66, 0x00, 0x00, 0x00, 0x40, 0xaf, 0x01, 0x42, 0xd9,
        0xfb, 0x11, 0x70, 0xdf, 0x15, 0x64, 0xcf, 0xa2, 0x0d, 0xe5, 0xb4, 0x44, 0x45, 0xc2, 0xd1,
        0x41, 0xa2, 0xc6, 0xd7, 0x8a, 0x17, 0x12, 0xd7, 0xed, 0x51, 0xba, 0x83, 0x55, 0x01, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x79, 0xd8, 0x8f, 0x49,
        0x4b, 0x75, 0x7a, 0xd0, 0x95, 0xf6, 0xc9, 0x1d, 0x55, 0xab, 0x2d, 0xbf, 0x82, 0xff, 0x71,
        0x83, 0x2d, 0x7b, 0x7a, 0x69, 0x30, 0xd7, 0xa4, 0xe2, 0x7d, 0xbf, 0xad, 0x02, 0x00, 0x00,
        0x00, 0x9f, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0x3e, 0x01,
        0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x61,
        0x00, 0x00, 0x00, 0x00, 0x90, 0x2f, 0x50, 0x09, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00,
        0x10, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x9b, 0xd7, 0xe0,
        0x6f, 0x3e, 0xcf, 0x4b, 0xe0, 0xf2, 0xfc, 0xd2, 0x18, 0x8b, 0x23, 0xf1, 0xb9, 0xfc, 0xc8,
        0x8e, 0x5d, 0x4b, 0x65, 0xa8, 0x63, 0x7b, 0x17, 0x72, 0x3b, 0xbd, 0xa3, 0xcc, 0xe8, 0x01,
        0x14, 0x00, 0x00, 0x00, 0x22, 0x28, 0xda, 0xe3, 0x40, 0xf5, 0x87, 0x64, 0x73, 0x62, 0xd3,
        0x1e, 0x3f, 0x04, 0xd7, 0xa5, 0x1f, 0x81, 0x68, 0xdc, 0x36, 0x00, 0x00, 0x00, 0x10, 0x00,
        0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x3a, 0x46, 0x8d, 0x53, 0x35,
        0x2e, 0xb8, 0x55, 0x52, 0x1d, 0xab, 0xed, 0x0d, 0xc7, 0x03, 0x69, 0x29, 0xbf, 0xe7, 0x27,
        0x66, 0xad, 0x58, 0xf8, 0x01, 0xed, 0xfb, 0xae, 0x56, 0x4f, 0x7b, 0x43, 0x01, 0x01, 0x00,
        0x00, 0x00, 0x01, 0x97, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
        0x61, 0x00, 0x00, 0x00, 0x00, 0x90, 0x2f, 0x50, 0x09, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00,
        0x00, 0x10, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x9b, 0xd7,
        0xe0, 0x6f, 0x3e, 0xcf, 0x4b, 0xe0, 0xf2, 0xfc, 0xd2, 0x18, 0x8b, 0x23, 0xf1, 0xb9, 0xfc,
        0xc8, 0x8e, 0x5d, 0x4b, 0x65, 0xa8, 0x63, 0x7b, 0x17, 0x72, 0x3b, 0xbd, 0xa3, 0xcc, 0xe8,
        0x01, 0x14, 0x00, 0x00, 0x00, 0x22, 0x28, 0xda, 0xe3, 0x40, 0xf5, 0x87, 0x64, 0x73, 0x62,
        0xd3, 0x1e, 0x3f, 0x04, 0xd7, 0xa5, 0x1f, 0x81, 0x68, 0xdc, 0x36, 0x00, 0x00, 0x00, 0x10,
        0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x9e, 0x53, 0x7b, 0xf5,
        0xb8, 0xec, 0x04, 0x4c, 0xa3, 0xf5, 0x33, 0x55, 0xe8, 0x79, 0xf3, 0xfd, 0x88, 0x32, 0x21,
        0x7e, 0x4a, 0x9b, 0x41, 0xd9, 0x99, 0x4c, 0xf0, 0xc5, 0x47, 0x24, 0x1a, 0x79, 0x01, 0x01,
        0x00, 0x00, 0x00, 0x01, 0x61, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
        0x00, 0x61, 0x00, 0x00, 0x00, 0x78, 0x5f, 0xec, 0x66, 0x11, 0x00, 0x00, 0x00, 0x49, 0x00,
        0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x9b,
        0xd7, 0xe0, 0x6f, 0x3e, 0xcf, 0x4b, 0xe0, 0xf2, 0xfc, 0xd2, 0x18, 0x8b, 0x23, 0xf1, 0xb9,
        0xfc, 0xc8, 0x8e, 0x5d, 0x4b, 0x65, 0xa8, 0x63, 0x7b, 0x17, 0x72, 0x3b, 0xbd, 0xa3, 0xcc,
        0xe8, 0x01, 0x14, 0x00, 0x00, 0x00, 0x22, 0x28, 0xda, 0xe3, 0x40, 0xf5, 0x87, 0x64, 0x73,
        0x62, 0xd3, 0x1e, 0x3f, 0x04, 0xd7, 0xa5, 0x1f, 0x81, 0x68, 0xdc, 0x28, 0x00, 0x00, 0x00,
        0x10, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
        0x00, 0x04, 0x0c, 0x0a, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x66, 0xc7,
        0xf9, 0xbb, 0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x69,
        0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00,
        0x10, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00,
        0x00, 0xbf, 0xe8, 0x4b, 0xdc, 0xe5, 0x16, 0x05, 0x79, 0xfa, 0xfc, 0x77, 0x53, 0xdc, 0x40,
        0xee, 0x86, 0x12, 0x14, 0x46, 0xb5, 0xe3, 0x7c, 0x20, 0x5b, 0x55, 0x9a, 0xb6, 0x0c, 0x62,
        0x20, 0x19, 0x7e, 0x14, 0xb2, 0xfc, 0x1e, 0x54, 0x01, 0xf1, 0x1b, 0x9c, 0x0f, 0x92, 0xd4,
        0x91, 0x2e, 0x85, 0x30, 0x0e, 0xb1, 0xb7, 0x7b, 0xe5, 0x72, 0x26, 0xf9, 0x57, 0x21, 0x05,
        0xb5, 0x63, 0x29, 0x5d, 0x63, 0x01, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
        0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
        0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
        0x00, 0x5f, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0xf2, 0x00,
        0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x4d,
        0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x00, 0x00, 0x71, 0xa7, 0xba, 0x8f, 0xc9, 0x63, 0x49, 0xfe, 0xa0, 0xed, 0x3a,
        0x5c, 0x47, 0x99, 0x2e, 0x3b, 0x40, 0x84, 0xb0, 0x31, 0xa4, 0x22, 0x64, 0xa0, 0x18, 0xe0,
        0x07, 0x2e, 0x81, 0x72, 0xe4, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0x76, 0x00,
        0x75, 0x08, 0x83, 0x3f, 0x6f, 0x28, 0x43, 0xe2, 0x15, 0x8d, 0x59, 0x9e, 0x3b, 0x6d, 0x32,
        0xfb, 0xed, 0x6a, 0xa3, 0xd3, 0x0c, 0x28, 0x2e, 0xb5, 0x65, 0x33, 0xcb, 0xda, 0x8c, 0x00,
        0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00,
        0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0xb8, 0x99, 0x9c,
        0x22, 0xdd, 0x01, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x30, 0x00,
        0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x9b, 0xd7, 0xe0, 0x6f, 0x3e, 0xcf, 0x4b, 0xe0, 0xf2,
        0xfc, 0xd2, 0x18, 0x8b, 0x23, 0xf1, 0xb9, 0xfc, 0xc8, 0x8e, 0x5d, 0x4b, 0x65, 0xa8, 0x63,
        0x7b, 0x17, 0x72, 0x3b, 0xbd, 0xa3, 0xcc, 0xe8, 0x01, 0x14, 0x00, 0x00, 0x00, 0xee, 0x11,
        0x07, 0x94, 0x9b, 0x85, 0x9e, 0x16, 0xe6, 0x78, 0x96, 0x09, 0x74, 0x14, 0x05, 0xc5, 0xe4,
        0x16, 0xc6, 0xa2, 0x0c, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x61, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00,
        0x00, 0x10, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x41, 0x00,
        0x00, 0x00, 0x83, 0x37, 0xf5, 0x98, 0x6c, 0x72, 0x3f, 0x58, 0xde, 0x5f, 0x4e, 0xe8, 0xa3,
        0x3c, 0x6c, 0xb7, 0x01, 0xfa, 0xa0, 0x1b, 0xd1, 0x8a, 0xee, 0x42, 0xb8, 0x7b, 0xfe, 0x60,
        0x05, 0x95, 0x87, 0x06, 0x7e, 0x09, 0x3f, 0xfc, 0xd6, 0xf2, 0x13, 0x54, 0x21, 0x77, 0xd5,
        0x7c, 0x94, 0x97, 0x81, 0xd8, 0xb8, 0x84, 0x92, 0x14, 0xea, 0x8c, 0xa3, 0x0d, 0xb8, 0x63,
        0x28, 0x1c, 0xc9, 0x03, 0xfc, 0x89, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
        0x36, 0xb7, 0x81, 0x6b, 0x38, 0xfc, 0x23, 0x0d, 0x40, 0xc4, 0x1d, 0xce, 0xff, 0x4b, 0xc4,
        0x76, 0x7b, 0x1f, 0x32, 0xbe, 0xf4, 0x08, 0xb0, 0x37, 0x8a, 0xe3, 0x45, 0x36, 0x03, 0xab,
        0xe3, 0x62,
    ];
    let b0: crate::ckb_types::BlockV1 = serde_molecule::from_slice(&bytes, false).unwrap();
    let b1 = serde_molecule::to_vec(&b0, false).unwrap();
    assert_eq!(b1.len(), 2807);
    let b2: crate::ckb_types::BlockV1 = serde_molecule::from_slice(&b1, false).unwrap();
    assert_eq!(b2, b0);
    compare_slice(bytes.as_slice(), b1.as_slice());
}
